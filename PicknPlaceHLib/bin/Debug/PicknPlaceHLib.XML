<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PicknPlaceHLib</name>
    </assembly>
    <members>
        <member name="T:PicknPlaceHLib.libDisp">
            <summary>
            libDisp Class
            ply, om3, sfm 파일을 입력 받아 디스플레이에 이미지를 뿌려주는 클래스
            </summary>
        </member>
        <member name="M:PicknPlaceHLib.libDisp.#ctor">
            <summary>
            libDisp 생성자
            </summary>
        </member>
        <member name="M:PicknPlaceHLib.libDisp.getDisp(System.String,System.Int32,HalconDotNet.HWindow,HalconDotNet.HWindow)">
            <summary>
            getDisp ply, om3, sfm 파일의 2D, 3D 이미지를 hwin에 넣어주는 메서드
            </summary>
            <param name="ImageFileName">전체 경로와 확장자를 포함한 파일 문자열 (.ply, .om3, .sfm)</param>
            <param name="MovingView">3D View Static = 0, 3D View Movable and Button(강제종료 불가)버전 = 1</param>
            <param name="extWin2D">form의 2D hwindow 핸들(om3, sfm 파일일 경우 null 입력 가능)</param>
            <param name="extWin3D">form의 3D hwindow 핸들</param>
        </member>
        <member name="M:PicknPlaceHLib.libDisp.Dispose">
            <summary>
            Dispose 본 라이브러리에서 사용한 객체 파괴 메서드
            </summary>
        </member>
        <member name="T:PicknPlaceHLib.libModelCreate">
            <summary>
            libModelCreate Surface매칭용 3D모델 생성 Class
            </summary>
        </member>
        <member name="T:PicknPlaceHLib.libModelCreate.CBHalconState">
            <summary>
            CBHalconState 프로시저객체와, 모델 변수의 상태를 알려주는 이벤트 핸들링
            </summary>
            <param name="hfunc">"p" = PROCEDURE OBJ, "m" = MODEL VAR</param>
            <param name="state">ENUM_HPROCEDURESTATE, ENUM_HMODELSTATE 값 콜백</param>
        </member>
        <member name="E:PicknPlaceHLib.libModelCreate.mCBHalconState">
            <summary>
            CBHalconState 프로시저객체와, 모델 변수의 상태를 알려주는 이벤트 핸들링
            </summary>
        </member>
        <member name="P:PicknPlaceHLib.libModelCreate.HPROCEDURE_STATE">
            <summary>
            HPROCEDURE_STATE PROCEDURE 객체의 상태를 확인할 수 있는 Property 변수
            </summary>
            <value> ENUM_HPROCEDURESTATE 값을 SET하게 되어 있다</value>
        </member>
        <member name="P:PicknPlaceHLib.libModelCreate.HMODEL_STATE">
            <summary>
            HMODEL_STATE MODEL 변수의 상태를 확인할 수 있는 Property 변수
            </summary>
            <value> ENUM_HMODELSTATE값을 SET하게 되어있다</value>
        </member>
        <member name="M:PicknPlaceHLib.libModelCreate.#ctor">
            <summary>
            libModelCreate Class 생성자
            </summary>
        </member>
        <member name="P:PicknPlaceHLib.libModelCreate.GetInstance">
            <summary>
            libModelCreate libModelCreate Class Singleton Instance
            </summary>
        </member>
        <member name="M:PicknPlaceHLib.libModelCreate.saveImageCreateModelParam(System.String,System.Double,System.Double,System.Int32,System.Int32,System.String,System.Double,System.Int32,System.String,System.Double,System.Double,System.Int32,System.Int32,System.Double,System.Double,System.Double,System.Int32,System.Int32)">
            <summary>
            saveImageCreateModelParam 3DImage(Scene)에서 피사체를 추출하여 모델을 생성하는 파라메터를 정의하는 메서드 
            </summary>
            <param name="plyfileName">경로 포함한 .ply file명 </param>
            <param name="minDepth">배경 분리 셋팅 값: 지면 기준은 0.0이며, 0이상부터는 지면보다 높은데서 PCL형성(default:0.0) -N ~ N (카메라 센서 위치) </param>
            <param name="maxDepth">배경 분리 셋팅 값: 피사체의 PCL이 형성될 높이이며, 0.0 ~ N(카메라 센서 위치) </param>
            <param name="ObjectModel3DCrop">3DImage 편집 기능 (무편집 : 0, 자동지면제거: 1, 미세 조정: 2) </param>
            <param name="ModelForm"><para>PointModel = 0, EdgeModel = 1, Trianglulate(Polygon)Model = 2 (defalut:0) </para>
            <para>PointModel은 Point요소만을 가지고 매칭하며, 피사체가 복잡할 수록 매칭 성공률이 증가</para>
            <para>EdgeModel은 편평하고 단순한 형상의 피사체에 유리(시편, 자, 판 조각 등)</para>
            <para>Triangle Model은 Point요소에 Triangle(Polygon)을 입혀 매칭 성공률을 높힘 단순하고 입체적인 피사체일 수록 유리</para></param>
            <param name="sampling_method"><para>3D Image(Scene)를 샘플링하는 방법 (default:"fast_compute_normals") "accurate", "accurate_use_normals", "fast", "fast_compute_normals" </para>
            <para>normals가 추가된 옵션은 씬의 Point에 법선을 추가하여 씬을 구성하는 각 point들이 방향을 지니게 된다 법선이 추가되면 매칭 성공율이 증가.</para></param>
            <param name="sampling_distance">3D Image(Scene)를 샘플링하는 값 (default:0.5) 0.1 ~ 0.9</param>
            <param name="triangulate_greedyKnnCnt"><para>피사체 3D Model을 구성하는 Point를 몇개를 이어 triangulate를 생성할 것인지에 대한 Knn 갯수 (default:40) int 0 ~ 100</para>
            <para>값이 클 경우 단순한 triangulate를 갖는 피사체가 모델링</para>
            <para>값이 작을 경우 복잡한 triangulate를 갖게되는 피사체가 모델링</para> </param>
            <param name="triangulate_greedyKnnRadiusParam">fixed: greedyKnnRadius를 고정하여 point 반경 산출, z_factor: z좌표에 greedyKnnRadiusValue를 곱하여 반경 산출(default:"z_factor") "auto", "fixed", "z_factor"</param>
            <param name="triangulate_greedyKnnRadiusValue"><para>피사체 3D Model을 구성하는 중심Point의 반경값(default:0.5) 0.15 ~ 5.0</para>
            <para>값이 클 경우 단순한 triangulate를 갖는 피사체가 모델링</para>
            <para>값이 작을 경우 복잡한 triangulate를 갖게되는 피사체가 모델링</para></param>
            <param name="triangulate_smallsurfaceremoveValue">3D Model의 작은 surface 제거 값 (default:0.0) 0.0 ~ 1000.0</param>
            <param name="triangulate_greedy_mesh_dilationValue">3D Model의 surface 팽창 값 (default:0) 0 ~ 3</param>
            <param name="create_sfm_useInvertNormals">SurfaceModel의 KeyPoint normals방향 반전(default:0)0: 방향처리 안함, 1: 방향 반전</param>
            <param name="create_sfm_RelSampleDistance"><para>3D Model을 Surface Model로 변환할 때 Surface Model의 Point간 배치거리에 대한 퍼센테이지 (모델 직경(mm) * 값 = 점간 배치거리) (default:"0.03") 0.0 ~ 1.0</para>
            <para>값이 클 경우 SurfaceModel의 Point간의 배치 거리가 넓어져 정교함이 낮은 피사체 모델이 생성</para>
            <para>값이 작을 경우 SurfaceModel의 Point간의 배치 거리가 좁아져 정교함이 높은 피사체 모델이 생성</para></param>
            <param name="CreateSurfModelTimeoutSec">Surface Model 변환 타임아웃 시간 단위 "초"</param>
            <param name="AutoRoiNOWPointN_BeforePointNDIFF"><para>자동 지면 제거 사용(ObjectModel3DCrop=1)- XYZ PointCloud 중 Z를 1단위로 잘라 이전, 현재 X,Y상에 존재하는 Point갯수에 대한 차 값</para> 
            <para> 작을 수록 지면을 정교하게 제거, 클수록 피사체와 지면이 포함</para></param>
            <param name="create_sfm_train_self_similar_poses">피사체를 나타내는 ObjectModel3D이 대칭형상을 갖고 있을 경우 자동 최적화</param>
            <param name="create_sfm_train_view_based">카메라의 시점으로 피사체를 바라보는 Surface형태 점수 활성화(단순한 형상이 아닐 경우 비활성화 권장)</param>
        </member>
        <member name="M:PicknPlaceHLib.libModelCreate.saveSimpleCreateModelParam(System.Int32,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Int32,System.String,System.Double,System.Int32,System.String,System.Double,System.Double,System.Int32,System.Int32,System.Double,System.Double,System.Int32,System.Double,System.Int32,System.Int32)">
            <summary>
            saveSimpleCreateModelParam SimpleObject 3D Model을 생성하는 메서드
            </summary>
            <param name="SimpleObj">0:박스 모델 생성, 1:구체 모델 생성, 2: 원통 모델 생성</param>
            <param name="BOXLengthX">SimpleObj = 0 일 경우, 박스의 X길이(mm) </param>
            <param name="BOXLengthY">SimpleObj = 0 일 경우, 박스의 Y길이(mm)</param>
            <param name="BOXLengthZ">SimpleObj = 0 일 경우, 박스의 Z길이(mm)</param>
            <param name="SphereRadius">SimpleObj = 1 일 경우, 구체의 반지름(mm)</param>
            <param name="CylinderRadius">SimpleObj = 2 일 경우, 원통의 반지름(mm)</param>
            <param name="CylinderZMinExt">SimpleOb = 2 일 경우, 높이의 중간 0을 기준으로 원통 하판 음의 위치(mm)</param>
            <param name="CylinderZMaxExt">SimpleObj = 2 일 경우, 높이의 중간 0을 기준으로 원통 상판 양의 위치(mm)</param>
            <param name="ModelForm"><para>PointModel = 0, EdgeModel = 1, Triangle(Polygon)Model = 2 (defalut:0)</para> 
            <para>PointModel은 Point요소만을 가지고 매칭하며, 피사체가 복잡할 수록 매칭 성공률이 증가</para>
            <para>EdgeModel은 편평하고 단순한 형상의 피사체에 유리(시편, 자, 판 조각 등)</para>
            <para>Triangle Model은 Point요소에 Triangle(Polygon)을 입혀 매칭 성공률을 높힘 단순하고 입체적인 피사체일 수록 유리</para></param>
            <param name="sampling_method"><para>3D Image(Scene)를 샘플링하는 방법 (default:"fast_compute_normals") "accurate", "accurate_use_normals", "fast", "fast_compute_normals" </para>
            <para>normals가 추가된 옵션은 씬의 Point에 법선을 추가하여 씬을 구성하는 각 point들이 방향을 지니게 된다 법선이 추가되면 매칭 성공율이 증가.</para></param>
            <param name="sampling_distance">3D Image(Scene)를 샘플링하는 값 (default:0.5) 0.1 ~ 0.9</param>
            <param name="triangulate_greedyKnnCnt"><para>피사체 3D Model을 구성하는 Point를 몇개를 이어 triangulate를 생성할 것인지에 대한 Knn 갯수 (default:40) int 0 ~ 100</para>
            <para>값이 클 경우 단순한 triangulate를 갖는 피사체가 모델링 되며, 값이 작을 경우 복잡한 triangulate를 갖게되는 피사체가 모델링 됨</para></param>
            <param name="triangulate_greedyKnnRadiusParam">fixed: greedyKnnRadius를 고정하여 point 반경 산출, z_factor: z좌표에 greedyKnnRadiusValue곱하여 반경 산출(default:"z_factor") "auto", "fixed", "z_factor"</param>
            <param name="triangulate_greedyKnnRadiusValue"><para>피사체 3D Model을 구성하는 중심Point의 반경값(default:0.5) 0.15 ~ 5.0</para>
            <para>값이 클 경우 단순한 triangulate를 갖는 피사체가 모델링</para>
            <para>값이 작을 경우 복잡한 triangulate를 갖게되는 피사체가 모델링 됨</para></param>
            <param name="triangulate_smallsurfaceremoveValue">3D Model의 작은 surface 제거 값 (default:0.0) 0.0 ~ 1000.0</param>
            <param name="triangulate_greedy_mesh_dilationValue">3D Model의 surface 팽창 값 (default:0) 0 ~ 3</param>
            <param name="create_sfm_useInvertNormals">SurfaceModel의 KeyPoint normals방향 반전(default:0) 0: 방향처리 안함, 1: 방향 반전</param>
            <param name="create_sfm_RelSampleDistance"><para>3D Model을 Surface Model로 변환할 때 Surface Model의 Point간 배치거리에 대한 퍼센테이지 (모델 직경(mm) * 값 = 점간 배치거리) (default:"0.03") 0.0 ~ 1.0</para>
            <para>값이 클 경우 SurfaceModel의 Point간의 배치 거리가 넓어져 정교함이 낮은 피사체 모델이 생성</para>
            <para>값이 작을 경우 SurfaceModel의 Point간의 배치 거리가 좁아져 정교함이 높은 피사체 모델이 생성</para></param>
            <param name="CreateSurfModelTimeoutSec">Surface Model 변환 타임아웃 시간 단위 "초"</param>
            <param name="Simple_HalfCut">Surface Model 생성전 SIMPLE OBJ3D의 탑뷰를 기준으로 Z축 중앙부터 뒷편의 포인트 제거</param>
            <param name="AutoRoiNOWPointN_BeforePointNDIFF"><para>자동 지면 제거 사용(ObjectModel3DCrop=1)- XYZ PointCloud 중 Z를 1단위로 잘라 이전, 현재 X,Y상에 존재하는 Point갯수에 대한 차 값</para> 
            <para> 작을 수록 지면을 정교하게 제거, 클수록 피사체와 지면이 포함</para></param>
            <param name="create_sfm_train_self_similar_poses">피사체를 나타내는 ObjectModel3D이 대칭형상을 갖고 있을 경우 자동 최적화</param>
            <param name="create_sfm_train_view_based">카메라의 시점으로 피사체를 바라보는 Surface형태 점수 활성화(단순한 형상이 아닐 경우 비활성화 권장)</param>
        </member>
        <member name="M:PicknPlaceHLib.libModelCreate.ModelCreate(HalconDotNet.HWindow)">
            <summary>
            ModelCreate 모델 생성 메서드
            생성 과정중 UI에 HALCON 3D 모델링을 넣어줌
            </summary>
            <param name="extWin">HWindow 핸들</param>
        </member>
        <member name="M:PicknPlaceHLib.libModelCreate.Create_OM3_SFM(System.String,System.String)">
            <summary>
            Create_OM3_SFM 3D 모델파일 생성 메서드
            </summary>
            <param name="OM3FileName">OM3(할콘3D모델)파일이 생성될 디렉토리를 포함한 절대 경로</param>
            <param name="SFMFileName">SFM(Surface Mathing용 3D모델)파일이 생성될 디렉토리를 포함한 절대 경로</param>
        </member>
        <member name="M:PicknPlaceHLib.libModelCreate.Dispose">
            <summary>
            Dispose 본 라이브러리에서 사용한 객체 파괴 메서드
            </summary>
        </member>
        <member name="T:PicknPlaceHLib.libModelUnion">
            <summary>
            libModelUnion Class
            피사체를 다각도에서 찍은 생성모델을 합성하여 하나의 입체 모델을 만드는 클래스
            </summary>
        </member>
        <member name="T:PicknPlaceHLib.libModelUnion.CBHalconState">
            <summary>
            CBHalconState 프로시저객체와, 모델 변수의 상태를 알려주는 이벤트 핸들링
            </summary>
            <value>이벤트 콜백</value>
            <param name = "hfunc">"p" = PROCEDURE OBJ, "m" = MODEL VAR</param>
            <param name = "state">ENUM_HPROCEDURESTATE, ENUM_HMODELSTATE 값 콜백</param>
        </member>
        <member name="E:PicknPlaceHLib.libModelUnion.mCBHalconState">
            <summary>
            CBHalconState 프로시저객체와, 모델 변수의 상태를 알려주는 이벤트 핸들링
            </summary>
            <value>이벤트 콜백</value>
        </member>
        <member name="P:PicknPlaceHLib.libModelUnion.HPROCEDURE_STATE">
            <summary>
            HPROCEDURE_STATE PROCEDURE 객체의 상태를 확인할 수 있는 Property 변수.
            ENUM_HPROCEDURESTATE 값을 SET하게 되어 있다
            </summary>
        </member>
        <member name="P:PicknPlaceHLib.libModelUnion.HMODEL_STATE">
            <summary>
            HMODEL_STATE MODEL 변수의 상태를 확인할 수 있는 Property 변수.
            ENUM_HMODELSTATE값을 SET하게 되어있다
            </summary>
        </member>
        <member name="M:PicknPlaceHLib.libModelUnion.#ctor">
            <summary>
            libModelUnion 생성 메서드
            </summary>
        </member>
        <member name="M:PicknPlaceHLib.libModelUnion.#ctor(System.String[])">
            <summary>
            libModelUnion 생성 메서드
            배경을 포함한 피사체 영역의 z축 min, max와, 피사체 영역의 왼쪽상단 꼭지점, 오른쪽하단꼭지점 만큼을 이용해 입체 사각형을 만들어 피사체와 배경을 분리
            </summary>
            <param name="filesName">경로를 포함한 om3파일명 </param>
        </member>
        <member name="M:PicknPlaceHLib.libModelUnion.saveUnionParam(System.Double,System.String,System.Int32,System.String,System.Double,System.Double,System.Int32,System.String,System.Double,System.Double)">
            <summary>
            saveUnionParam 합성용 파라메터 설정 메서드
            </summary>
            <param name="smooth_mls_knncnt">smoothing mls knn 갯수 (default:60) 0.1 ~ 60.0 </param>
            <param name="register_obj3d_Param">연속성을 가진 obj3d모델 등록 방법(default:"robust") "accurate", "robust"</param>
            <param name="triangulate_greedyKnnCnt"><para>피사체 3D Model을 구성하는 Point를 몇개를 이어 triangulate를 생성할 것인지에 대한 Knn 갯수 (default:40) int 0 ~ 100</para>
            <para>값이 클 경우 단순한 triangulate를 갖는 피사체가 모델링</para>
            <para>값이 작을 경우 복잡한 triangulate를 갖게되는 피사체가 모델링</para> </param>
            <param name="triangulate_greedyKnnRadiusParam">fixed: greedyKnnRadius를 고정하여 point 반경 산출, z_factor: z좌표에 greedyKnnRadiusValue를 곱하여 반경 산출(default:"z_factor") "auto", "fixed", "z_factor"</param>
            <param name="triangulate_greedyKnnRadiusValue"><para>피사체 3D Model을 구성하는 중심Point의 반경값(default:0.5) 0.15 ~ 5.0</para>
            <para>값이 클 경우 단순한 triangulate를 갖는 피사체가 모델링</para>
            <para>값이 작을 경우 복잡한 triangulate를 갖게되는 피사체가 모델링</para></param>
            <param name="triangulate_smallsurfaceremoveValue">3D Model의 작은 surface 제거 값 (default:0.0) 0.0 ~ 1000.0</param>
            <param name="triangulate_greedy_mesh_dilationValue">3D Model의 surface 팽창 값 (default:0) 0 ~ 3</param>
            <param name="sampling_method"><para>3D Image(Scene)를 샘플링하는 방법 (default:"fast_compute_normals") "accurate", "accurate_use_normals", "fast", "fast_compute_normals" </para>
            <para>normals가 추가된 옵션은 씬의 Point에 법선을 추가하여 씬을 구성하는 각 point들이 방향을 지니게 된다 법선이 추가되면 매칭 성공율이 증가.</para></param>
            <param name="sampling_distance">3D Image(Scene)를 샘플링하는 값 (default:0.5) 0.1 ~ 0.9</param>
            <param name="create_sfm_RelSampleDistance"><para>3D Model을 Surface Model로 변환할 때 Surface Model의 Point간 배치거리에 대한 퍼센테이지 (모델 직경(mm) * 값 = 점간 배치거리) (default:"0.03") 0.0 ~ 1.0</para></param>
        </member>
        <member name="M:PicknPlaceHLib.libModelUnion.ModelUnion(HalconDotNet.HWindow)">
            <summary>
            ModelUnion 모델 생성 메서드
            생성 과정중 UI에 HALCON 3D 모델링을 넣어줌
            output: surface 모델 파일(.sfm), 3d object 모델 파일 (.om3)
            </summary>
            <param name="extWin">HWindow 핸들</param>
        </member>
        <member name="M:PicknPlaceHLib.libModelUnion.ModelUnion">
            <summary>
            ModelUnion 모델 생성 메서드
            output: surface 모델 파일(.sfm), 3d object 모델 파일 (.om3)
            </summary>
        </member>
        <member name="M:PicknPlaceHLib.libModelUnion.Create_OM3_SFM(System.String,System.String)">
            <summary>
            Create_OM3_SFM 합성 3D 모델 생성 메서드
            </summary>
            <param name="OM3FileName">OM3(할콘3D모델)파일이 생성될 디렉토리를 포함한 절대 경로</param>
            <param name="SFMFileName">SFM(Surface Mathing용 3D모델)파일이 생성될 디렉토리를 포함한 절대 경로</param>
        </member>
        <member name="M:PicknPlaceHLib.libModelUnion.Dispose">
            <summary>
            Dispose 본 라이브러리에서 사용한 객체 파괴 메서드
            </summary>
        </member>
        <member name="T:PicknPlaceHLib.libSurfaceMatching">
            <summary>
            libSurfaceMatching Class 
            3d surface matching을 하고 6축 좌표를 리턴 
            필요시 2d, 3d halcon ui에 이미지를 넣어줌
            </summary>
        </member>
        <member name="T:PicknPlaceHLib.libSurfaceMatching.CBHalconState">
            <summary>
            CBHalconState 프로시저객체와, 모델 변수의 상태를 알려주는 이벤트 핸들링
            </summary>
            <value>이벤트 콜백</value>
            <param name = "hfunc">"p" = PROCEDURE OBJ</param>
            <param name = "state">ENUM_HPROCEDURESTATE 값 콜백</param>
        </member>
        <member name="E:PicknPlaceHLib.libSurfaceMatching.mCBHalconState">
            <summary>
            CBHalconState 프로시저객체와, 모델 변수의 상태를 알려주는 이벤트 핸들링
            </summary>
            <value>이벤트 콜백</value>
        </member>
        <member name="P:PicknPlaceHLib.libSurfaceMatching.HPROCEDURE_STATE">
            <summary>
            HPROCEDURE_STATE PROCEDURE 객체의 상태를 확인할 수 있는 Property 변수
            </summary>
            <value> ENUM_HPROCEDURESTATE 값을 SET하게 되어 있다</value>
        </member>
        <member name="M:PicknPlaceHLib.libSurfaceMatching.#ctor">
            <summary>
            libSurfaceMatching 생성자
            </summary>
        </member>
        <member name="M:PicknPlaceHLib.libSurfaceMatching.saveSceneParam(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Double,System.Double,System.String,System.Double,System.Double)">
            <summary>
            saveSceneParam 
            매칭 전, 씬에 대한 처리 방법과 연산 속도와 정확도를 위해 어느 정도로 샘플링 할지 셋팅하는 메서드
            </summary>
            <param name="RoiForm">0:미사용, 1:Moving ROI, 2:Static ROI, 3:Auto ROI (default:"0")</param>
            <param name="MatchForm">0:SurfaceMatch, 1:SurfaceMatch with EDGE, 2:SurfaceMatch with Triangulate(default:"0") </param>
            <param name="ScanXArea">(ROI_USE = 1일 경우 기입)WIDTH 탐색 범위 0 ~ N </param>
            <param name="ScanXOverwrap">(ROI_USE = 1일 경우 기입) ScanXArea보다 크거나 같을 경우 MOVING ROI탐색시 겹치는 영역없음, 작을 경우 겹치는 영역 발생</param>
            <param name="ROIXAreaMin">(ROI_USE = 1 또는 2일 경우 기입)ZIVID FOV WIDTH 중간값 0을 기준으로 왼쪽 음의 값 </param>
            <param name="ROIXAreaMax">(ROI_USE = 1 또는 2일 경우 기입)ZIVID FOV WIDTH 중간값 0을 기준으로 오른쪽 양의 값 </param>
            <param name="ROIYAreaMin">(ROI_USE = 2일 경우 기입)ZIVID FOV HEIGHT 중간값 0을 기준으로 왼쪽 음의 값 </param>
            <param name="ROIYAreaMax">(ROI_USE = 2일 경우 기입)ZIVID FOV HEIGHT 중간값 0을 기준으로 오른쪽 양의 값 </param>
            <param name="ROIZPlaneMinDepth">(ROI_USE = 1 또는 2일 경우, ROI 사용시)작업대 지면(0)을 기준으로 Z축 ROI 최소 범위값</param>
            <param name="ROIZPlaneMaxDepth">(ROI_USE = 1 또는 2일 경우, ROI 사용시)ZPlaneMinDepth를 기준으로 Z축 ROI 최대 범위값</param>
            <param name="sampling_method">샘플링 도구 (default:"fast") "accurate", "accurate_use_normals", "fast", "fast_compute_normals" </param>
            <param name="sampling_distance">샘플 값 (default:0.5) 0.1 ~ 0.9</param>
            <param name="AutoRoiNOWPointN_BeforePointNDIFF"><para>Auto ROI사용(RoiForm=3)- XYZ PointCloud 중 Z를 1단위로 잘라 이전, 현재 X,Y상에 존재하는 Point갯수에 대한 차 값</para> 
            <para> 작을 수록 지면을 정교하게 제거, 클수록 피사체와 지면이 포함</para></param>
        </member>
        <member name="M:PicknPlaceHLib.libSurfaceMatching.saveSurfmatchParam(System.Double[],System.Double[],System.Double[],System.Int32[],System.String,System.String,System.Double,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Double)">
            <summary>
            saveSurfmatchParam 
            3d surface matching에 있어 찾는 방법, 점수 산정 등에 대한 설정 메서드
            </summary>
            <param name="find_sfm_RelSamplingDistance"><para>매칭할 씬과 3D 모델간의 연관거리 값(default:0.1) 0.0 ~ 1.0</para>
            <para>값이 클 경우</para>
            <para>1. 씬의 피사체 Point와 SurfaceModel 피사체 Point의 동질성이 다소 낮더라도 매칭 판정</para>
            <para>2. 연산량 감소</para>
            <para>값이 작을 경우 </para>
            <para>1. 씬의 피사체 Point와 SurfaceModel 피사체 Point의 동질성이 매우 높아야 매칭 판정</para>
            <para>2. 연산량 증가</para></param>
            <param name="find_sfm_KeyPointFraction"><para>매칭할 씬과 3D 모델의 사용할 점구름의 %비율(default: 0.1) 0.0 ~ 1.0</para> 
            <para>값이 클 경우</para>
            <para>1. 반복 매칭시 결과값이 안정적</para>
            <para>2. SurfaceModel이 정교하고 획득한 씬이 안정적이어야 매칭 성공률증가.</para>
            <para>3. 연산량 증가</para>
            <para>값이 작을 경우</para>
            <para>1. 반복 매칭시 결과값은 불안정</para>
            <para>2. SurfaceModel과 씬이 정교하지 않아도 매칭 성공률 증가</para>
            <para>3. 연산량 감소</para></param>
            <param name="find_sfm_MinScore">매칭 최소 합격기준 %(default : 0.35) 0.0 ~ 1.0 </param>
            <param name="find_sfm_NumMatch">매칭 갯수(default:1) 1 ~ 100 </param>
            <param name="find_sfm_FindMethod">매칭 방법(default:"mls") "mls", "fast"</param>
            <param name="find_sfm_ScoreType"> <para>점수 산정 방법(default:"model_point_fraction") </para>
            <para>"model_point_fraction"(씬에서 훈련된 모델의 매칭된 포인트 수를 모델의 총 포인트 수로 나눈 값)</para>
            <para>"num_model_points"(훈련모델과 매칭된 씬의 오브젝트 point간의 연관거리를 이용한 가중 점수)</para>
            <para>"num_scene_points"(씬에서 매칭된 훈련 모델의 매칭된 point갯수)</para></param>
            <param name="find_sfm_max_overlap_dist_value"><para>피사체 간 중첩 판정 거리 값</para>
            <para>max_overlap_dist_rel = 1일 경우 중첩 불가 (default: 0.5) 0.0 ~ 1 </para>
            <para>max_overlap_dist_abs = 1일 경우 중첩 불가 1 ~ n </para></param>
            <param name="AxisAlign">정육면체, 구체, 원통 단순한 피사체의 좌표를 정렬하는 기능 (default:0) 0 = off, 1 = on</param>
            <param name="find_sfm_max_overlap_dist_type">피사체 간 중첩 판정 거리 방식 지정 (default:"max_overlap_dist_rel"), "max_overlap_dist_rel", "max_overlap_dist_abs"  </param>
            <param name="find_sfm_pose_ref_use_scene_normals_value">매칭 시 Scene의 normals 사용 여부 (default:0) 0 = off, 1 = on</param>
            <param name="find_sfm_pose_ref_num_steps_value">Dense pose refinement 반복 횟수 
            <para>값이 높을 수록 정확도는 올라가지만 연산시간이 늘어나며, 특정 횟수에서 최적화가 되면 그 이상 반복해도 정확도는 올라가지 않음(default:5) 1 ~ n </para></param>
            <param name="find_sfm_pose_ref_sub_sampling_value">Dense pose refinement에 사용될 Scene point 비율
            <para>값을 높이면 사용되는 point는 줄어들고 연산시간, 정확도 낮아짐(default:2) 1 ~ n </para></param>
            <param name="PickLimitDegree">Picking 각도 제한값</param>
            <param name="FindSurfModelTimeoutSec">FindSurfaceModel Operator 수행 제한시간</param>
            <param name="MultiModelOverlapMatchingMode"><para>0: 멀티모델에서 중복 매칭 허용</para>
            <para>1: 멀티모델에서 중복 매칭 발생시 결과들의 중심점 거리가 MultiModelOverlapMargin 값 보다 작으면 스코어가 높은 매칭만을 남김</para>
            <para>2: 멀티모델에서 중복 매칭 발생시 결과들의 바운드박스 거리가 MultiModelOverlapMargin 값 보다 작으면 스코어가 높은 매칭만을 남김</para></param>
            <param name="MultiModelOverlapMargin">MultiModelOverlapMatchingMode을 사용할 경우 중심점/바운드박스 간 거리 마진값</param>
        </member>
        <member name="M:PicknPlaceHLib.libSurfaceMatching.findSurFaceMatching(System.String,System.String[],System.String[])">
            <summary>
            findSurFaceMatching 3d surface matching 수행 메서드
            </summary>
            <param name="plyfileName">현재 씬의 3d 이미지인입 인자 (경로를 포함한 ply파일명) </param>
            <param name="sfmfileName">피사체의 surface model 파일(경로를 포함한 sfm파일명)</param>
            <param name="om3fileName">피사체의 object3 d model 파일(경로를 포함한 om3파일명)</param>
            <returns> 피사체의 로봇 6축 Base 좌표 (형식 Array[matchingid, score, tx, ty, tz, rx, ry, rz], ex:)[0, 0.7, 200.23, 150.5, 52.1, 0.1, 0.5, 0.1]) </returns>
        </member>
        <member name="M:PicknPlaceHLib.libSurfaceMatching.getResult3DDisp(System.Int32,HalconDotNet.HWindow)">
            <summary>
            getResult3DDisp 메서드
            form에 붙은 halconwindow에 3d 이미지 인입
            </summary>
            <param name="MOVING_VIEW">3D View Static = 0, 3D View Movable and Button(강제종료 불가)버전 = 1</param>
            <param name="extWin">form의 hwindow 핸들</param>
        </member>
        <member name="M:PicknPlaceHLib.libSurfaceMatching.getResult2DDisp(HalconDotNet.HWindow)">
            <summary>
            getResult2DDisp 메서드
            form에 붙은 halconwindow에 2d 이미지 인입
            </summary>
            <param name="extWin">form의 hwindow 핸들</param>
        </member>
        <member name="M:PicknPlaceHLib.libSurfaceMatching.Dispose">
            <summary>
            Dispose 본 라이브러리에서 사용한 객체 파괴 메서드
            </summary>
        </member>
        <member name="T:PicknPlaceHLib.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:PicknPlaceHLib.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:PicknPlaceHLib.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:PicknPlaceHLib.ENUM_HPROCEDURESTATE">
            <summary>
            PROCEDURE 객체 상태
            </summary>
        </member>
        <member name="F:PicknPlaceHLib.ENUM_HPROCEDURESTATE.PROCEDURENONE">
            <summary>
            Halcon 프로시저 미수행 상태
            </summary>
        </member>
        <member name="F:PicknPlaceHLib.ENUM_HPROCEDURESTATE.PROCEDUREREADY">
            <summary>
            Halcon 엔진, 프로시저를 생성하고 파라미터를 전부 저장하고 프로시저 호출 직전 상태
            </summary>
        </member>
        <member name="F:PicknPlaceHLib.ENUM_HPROCEDURESTATE.PROCEDUREDONE">
            <summary>
            Halcon 프로시저를 수행하고 정상적으로 완료한 상태
            </summary>
        </member>
        <member name="F:PicknPlaceHLib.ENUM_HPROCEDURESTATE.PROCEDUREERROR">
            <summary>
            Halcon 프로시저 내의 에러를 반환한 상태
            </summary>
        </member>
        <member name="T:PicknPlaceHLib.ENUM_HMODELSTATE">
            <summary>
            MODEL 변수 상태
            </summary>
        </member>
        <member name="F:PicknPlaceHLib.ENUM_HMODELSTATE.MODELNONE">
            <summary>
            Halcon 프로시저에서 C#으로 반환되는 Object3DModel이 없는 상태
            </summary>
        </member>
        <member name="F:PicknPlaceHLib.ENUM_HMODELSTATE.MODELREADY">
            <summary>
            Halcon 프로시저에서 C#으로 반환되는 Object3DModel이 있는 상태
            </summary>
        </member>
        <member name="F:PicknPlaceHLib.ENUM_HMODELSTATE.MODELCREATE">
            <summary>
            C#에서 Object3DModel을 파일로 정상 생성한 상태
            </summary>
        </member>
        <member name="F:PicknPlaceHLib.ENUM_HMODELSTATE.MODELERROR">
            <summary>
            C#에서 Object3DModel을 파일로 생성 못한 상태
            </summary>
        </member>
    </members>
</doc>
